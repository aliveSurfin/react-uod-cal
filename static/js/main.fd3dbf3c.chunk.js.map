{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["localizer","momentLocalizer","moment","App","props","state","undefined","this","matric","window","open","location","origin","e","key","console","log","openUrl","setState","calendar","events","startAccessor","endAccessor","style","display","height","className","onChange","event","_HandleChange","target","value","onKeyDown","evnt","_HandleInput","onClick","table","data","headers","i","rows","cells","length","innerHTML","toLowerCase","replace","tableRow","rowData","j","push","days","addMinutes","date","minutes","Date","getTime","parseWeeks","weeks","includes","test","split","returnArray","x","parseInt","trim","parseTime","time","addDays","result","setDate","getDate","week1","dayAdd","y","cur","weeksForEvent","weeksSplit","z","concat","curDate","moduleName","activity","startHours","start","endHours","end","title","type","fullURL","hostname","xmlHttp","XMLHttpRequest","send","raw","responseText","daysJSON","doc","DOMParser","parseFromString","tableToJson","body","firstChild","temp","parseTimetable","search","getTimetable","Component","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd3dbf3c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport './sass/styles.scss'\nconst localizer = momentLocalizer(moment)\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  openUrl() {\n    if (this.state.matric === undefined) {\n      return\n    }\n    window.open(window.location.origin+\"/?s=\" + this.state.matric, \"_self\")\n  }\n  _HandleInput(e) {\n    if (e.key === 'Enter') {\n      console.log(\"hit\")\n      this.openUrl()\n    }\n  }\n  _HandleChange(e) {\n    console.log(e)\n    this.setState({ matric: e })\n  }\n  render() {\n    return (\n      <div>\n        <p>{this.state.calendar == null ? \"Enter Matric\" : \"\"}</p>\n        <Calendar\n          localizer={localizer}\n          events={this.state.calendar == null ? [] : this.state.calendar}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={this.state.calendar == null ? { display: \"none\" } : { height: 700 }}\n        />\n        <div className=\"matric-input\" style={this.state.calendar != null ? { display: \"none\" } : {}}>\n          <input onChange={event => this._HandleChange(event.target.value)}\n            onKeyDown={evnt => this._HandleInput(evnt)}\n          ></input>\n          <button onClick={() => this.openUrl()}>\n            submit\n        </button>\n        </div>\n      </div>\n    )\n  }\n  tableToJson(table) {\n    var data = [];\n\n    // first row needs to be headers\n    var headers = [];\n    for (var i = 0; i < table.rows[0].cells.length; i++) {\n      headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');\n    }\n\n    // go through cells\n    for (var i = 1; i < table.rows.length; i++) {\n\n      var tableRow = table.rows[i];\n      var rowData = {};\n\n      for (var j = 0; j < tableRow.cells.length; j++) {\n\n        rowData[headers[j]] = tableRow.cells[j].innerHTML;\n\n      }\n\n      data.push(rowData);\n    }\n\n    return data;\n  }\n\n  parseTimetable(days) {\n    console.log(days)\n    var events = []\n    function addMinutes(date, minutes) {\n      return new Date(date.getTime() + minutes * 60000);\n    }\n    function parseWeeks(weeks) {\n      if (weeks.includes(\"-\")) {\n        var test = weeks.split(\"-\")\n        var returnArray = []\n        for (let x = parseInt(test[0].trim()); x <= parseInt(test[1].trim()); x++) {\n          returnArray.push(parseInt(x))\n        }\n        return returnArray\n      } else {\n        var returnArray = []\n        returnArray.push(parseInt(weeks.trim()))\n        return returnArray\n      }\n    }\n    function parseTime(time) {\n      var split = time.split(\":\")\n      var returnArray = []\n      returnArray.push(parseInt(split[0].trim()))\n      returnArray.push(parseInt(split[1].trim()))\n      return returnArray\n\n    }\n    function addDays(date, days) {\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result;\n    }\n    var week1 = new Date(2020, 9, 5)\n    for (let x = 0; x < days.length; x++) {\n      let dayAdd = x\n      for (let y = 0; y < days[x].length; y++) {\n        var cur = days[x][y]\n\n        var weeksForEvent = []\n        if (cur.weeks.includes(\"-\") && cur.weeks.includes(\",\")) {\n          // multiple week spans\n          var weeksSplit = cur.weeks.split(\",\")\n          for (let z = 0; z < weeksSplit.length; z++) {\n            weeksForEvent = weeksForEvent.concat(parseWeeks(weeksSplit[z]))\n          }\n\n        }\n        else if (cur.weeks.includes(\",\")) {\n          // multiple weeks\n          var weeksSplit = cur.weeks.split(\",\")\n          for (let z = 0; z < weeksSplit.length; z++) {\n            weeksForEvent = weeksForEvent.concat(parseWeeks(weeksSplit[z]))\n          }\n        } else if (cur.weeks.includes(\"-\")) {\n          //week span\n\n          weeksForEvent = weeksForEvent.concat(parseWeeks(cur.weeks))\n        } else {\n          weeksForEvent = weeksForEvent.concat(parseWeeks(cur.weeks))\n          //single week\n        }\n        for (let i = 0; i < weeksForEvent.length; i++) {\n          let curDate = addDays(week1, ((weeksForEvent[i] - 1) * 7))\n          curDate = addDays(curDate, dayAdd)\n          //curDate = week1\n          var moduleName = cur.activity.includes(\"AC31008\") ? \"Networks and Data Communications\" : cur.activity.includes(\"AC31012\") ? \"Information Security\" : \"Database Systems\"\n          var startHours = parseTime(cur.start)\n          var start = addMinutes(curDate, startHours[0] * 60)\n          start = addMinutes(start, startHours[1])\n          var endHours = parseTime(cur.end)\n          var end = addMinutes(curDate, endHours[0] * 60)\n          end = addMinutes(end, endHours[1])\n          var event = {\n            title: cur.type + \" | \" + moduleName + \" | \" + cur.activity.split(\" \")[0],\n            start: start,\n            end, end,\n            allDay: false,\n          };\n          events.push(event)\n        }\n\n      }\n    }\n    console.log(events)\n    return events\n  }\n  getTimetable(matric) {\n    var hostname = 'https://timetable.dundee.ac.uk'\n    var port = '8084'\n    var path = '/reporting/textspreadsheet?objectclass=student+set&idtype=id&identifier='\n    var path2 = \"/1&t=SWSCUST+student+set+textspreadsheet&days=1-7&weeks=1-52&periods=1-28&template=SWSCUST+student+set+textspreadsheet\"\n    var cors = \"https://cors-anywhere.herokuapp.com/\"\n    cors = \"https://mysterious-everglades-22580.herokuapp.com/\"\n    cors = \"https://cors-spooky.herokuapp.com/\"\n    cors = \"https://secret-chamber-30285.herokuapp.com/\"\n    var fullURL = hostname + ':' + port + path + matric + path2\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", cors + fullURL, false); // false for synchronous request\n    xmlHttp.send();\n    //console.log(xmlHttp.responseText)\n    var raw = xmlHttp.responseText\n    raw = raw.split(`<p><span class='labelone'>Monday</span></p>`)[1]\n    if (raw == undefined) {\n      return\n    }\n    raw = raw.split(`<p><span class='labelone'>Saturday</span></p>`)[0]\n    //console.log(raw)\n    var days = raw.split('</span></p>')\n    var daysJSON = []\n    for (let x = 0; x < days.length; x++) {\n      console.log(x + 1)\n      //console.log(days[x])\n      if (days[x].includes(`<p><span class='labelone'`)) {\n        days[x] = days[x].split('</table>')[0]\n      }\n      //console.log(mapDOM(days[x],true))\n      var parser = new DOMParser();\n      var doc = parser.parseFromString(days[x], 'text/html');\n      // console.log(doc.body.firstChild)\n      // console.log(this.tableToJson(doc.body.firstChild))\n      daysJSON.push(this.tableToJson(doc.body.firstChild))\n\n    }\n    console.log(daysJSON)\n    let temp = this.parseTimetable(daysJSON)\n    this.setState({ \"calendar\": temp })\n\n  }\n  componentDidMount() {\n    console.log(window.location.search)\n    this.getTimetable(window.location.search.split(\"=\")[1])\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}