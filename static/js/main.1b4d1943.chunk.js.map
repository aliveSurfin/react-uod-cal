{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["moment","locale","week","dow","doy","localizer","momentLocalizer","Event","event","console","log","url","modcode","staff","staffurl","split","length","push","href","trim","staffsplit","x","className","type","moduleName","room","App","props","minTime","Date","setHours","maxTime","state","undefined","this","matric","window","open","location","origin","pathname","e","key","openUrl","setState","components","agenda","id","calendar","events","startAccessor","endAccessor","style","display","height","defaultView","min","max","formats","agendaHeaderFormat","start","end","utc","format","onChange","_HandleChange","target","value","onKeyDown","evnt","_HandleInput","name","onClick","table","data","headers","i","rows","cells","innerHTML","toLowerCase","replace","tableRow","rowData","j","days","addMinutes","date","minutes","getTime","parseWeeks","weeks","includes","test","returnArray","parseInt","parseTime","time","addDays","result","setDate","getDate","week1","week12","moduleDict","dayAdd","y","cur","activity","getModuleInfo","weeksForEvent","weeksSplit","z","concat","curDate","startHours","endHours","title","allDay","duration","xmlHttp","XMLHttpRequest","send","responseText","fullURL","hostname","raw","daysJSON","doc","DOMParser","parseFromString","tableToJson","body","firstChild","temp","parseTimetable","search","getTimetable","Component","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b4d1943.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport './sass/styles.scss'\nmoment.locale('en', {\n  week: {\n      dow: 1,\n      doy: 1,\n  },\n});\nconst localizer = momentLocalizer(moment)\n\nfunction Event({ event }) {\n  console.log(event);\n  /*\n   var event = {\n            title: cur.type + \" | \" + moduleName + \" | \" + cur.activity.split(\" \")[0],\n            type: cur.type,\n            start: start,\n            end: end,\n            allDay: false,\n            moduleName: moduleName,\n            modcode: modcode,\n            room: cur.room,\n            activity: cur.activity,\n            staff: cur.staff,\n          };\n  */\n  let url = \"https://www.dundee.ac.uk/module/\" + event.modcode\n  let staff = []\n  let staffurl = \"https://www.dundee.ac.uk/people/\"\n  if(event.staff.split(\",\").length===2){\n    staff.push(<a href={staffurl+ event.staff.split(\",\")[1].trim() + \"-\" + event.staff.split(\",\")[0].trim()}> {event.staff.split(\",\")[1]}-{event.staff.split(\",\")[0]} </a>)\n\n  }else{\n    let staffsplit = event.staff.split(\",\")\n    for(let x=0; x< staffsplit.length; x++){\n      staff.push(<a href={staffurl+ staffsplit[x+1].trim()+\"-\"+ staffsplit[x].trim()}> {staffsplit[x+1].trim()+\" \" +staffsplit[x].trim()} </a>)\n      x++\n    }\n    \n  }\n console.log(staff);\n  return (\n    <div className=\"event-wrapper\">\n      <div className=\"event-type\">\n        {event.type}\n      </div>\n      <div className=\"event-module\">\n        <a href={url}>{event.modcode} {event.moduleName}</a>\n      </div>\n      <div className=\"event-room\">\n        {event.room===\"&nbsp;\" ? \"n/a\" : event.room}\n      </div>\n      <div className=\"event-staff\">\n        {staff}\n      </div>\n    </div>\n  )\n\n}\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    const minTime = new Date();\n    minTime.setHours(8, 0, 0);\n    const maxTime = new Date();\n    maxTime.setHours(20, 0, 0);\n    this.state = {\n      minTime: minTime,\n      maxTime: maxTime\n    }\n\n  }\n  openUrl() {\n    if (this.state.matric === undefined) {\n      return\n    }\n    window.open(window.location.origin + window.location.pathname + \"/?s=\" + this.state.matric, \"_self\")\n  }\n  _HandleInput(e) {\n    if (e.key === 'Enter') {\n      console.log(\"hit\")\n      this.openUrl()\n    }\n  }\n  _HandleChange(e) {\n    console.log(e)\n    this.setState({ matric: e })\n  }\n\n  render() {\n    let components = {\n      agenda: {\n        event: Event // with the agenda view use a different component to render events\n      }\n    }\n    return (\n      <div id=\"container\">\n        <p>{this.state.calendar == null ? \"Enter Matric\" : \"\"}</p>\n        <Calendar\n          components={components}\n          localizer={localizer}\n          events={this.state.calendar == null ? [] : this.state.calendar}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={this.state.calendar == null ? { display: \"none\" } : { height: 700 }}\n          defaultView={'agenda'}\n          min={this.state.minTime}\n          max={this.state.maxTime}\n          formats = {{\n            agendaHeaderFormat: ({start, end}) => {\n                return (moment.utc(start).format('DD/MM/YYYY') + ' - ' + moment.utc(end).format('DD/MM/YYYY') );\n            }\n        }}\n\n        />\n        <div className=\"matric-input\" style={this.state.calendar != null ? { display: \"none\" } : {}}>\n          <form>\n          <input onChange={event => this._HandleChange(event.target.value)}\n            onKeyDown={evnt => this._HandleInput(evnt)}\n            name=\"matriculation\"\n          ></input>\n          <button onClick={() => this.openUrl()} type=\"submit\">\n            submit\n        </button>\n        </form>\n        </div>\n      </div>\n    )\n  }\n  tableToJson(table) {\n    var data = [];\n\n    // first row needs to be headers\n    var headers = [];\n    for (let i = 0; i < table.rows[0].cells.length; i++) {\n      headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');\n    }\n\n    // go through cells\n    for (let i = 1; i < table.rows.length; i++) {\n\n      var tableRow = table.rows[i];\n      var rowData = {};\n\n      for (var j = 0; j < tableRow.cells.length; j++) {\n\n        rowData[headers[j]] = tableRow.cells[j].innerHTML;\n\n      }\n\n      data.push(rowData);\n    }\n\n    return data;\n  }\n\n  parseTimetable(days) {\n    var events = []\n    function addMinutes(date, minutes) {\n      return new Date(date.getTime() + minutes * 60000);\n    }\n    function parseWeeks(weeks) {\n      if (weeks.includes(\"-\")) {\n        var test = weeks.split(\"-\")\n        var returnArray = []\n        for (let x = parseInt(test[0].trim()); x <= parseInt(test[1].trim()); x++) {\n          returnArray.push(parseInt(x))\n        }\n        return returnArray\n      } else {\n        let returnArray = []\n        returnArray.push(parseInt(weeks.trim()))\n        return returnArray\n      }\n    }\n    function parseTime(time) {\n      var split = time.split(\":\")\n      var returnArray = []\n      returnArray.push(parseInt(split[0].trim()))\n      returnArray.push(parseInt(split[1].trim()))\n      return returnArray\n\n    }\n    function addDays(date, days) {\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result;\n    }\n    var week1 = new Date(2020, 9, 5)\n    var week12 = new Date(2021, 0, 18)\n    var moduleDict = {};\n    for (let x = 0; x < days.length; x++) {\n      let dayAdd = x\n      for (let y = 0; y < days[x].length; y++) {\n        var cur = days[x][y]\n        var modcode = cur.activity.split(\" \")[0]\n        if (modcode.includes(\"/\")) {\n          modcode = modcode.split(\"/\")[0]\n        } else if (modcode.includes(\"-\")) {\n          modcode = modcode.split(\"-\")[0]\n        }\n        modcode = modcode.replace(/[^0-9a-z]/gi, '')\n        var moduleBaseURL = \"https://www.dundee.ac.uk/module/\"\n\n        if (!(modcode in moduleDict)) {\n          moduleDict[modcode] =\n            this.getModuleInfo(moduleBaseURL + modcode)\n        }\n        var moduleName = moduleDict[modcode]\n        var weeksForEvent = []\n        if (cur.weeks.includes(\"-\") && cur.weeks.includes(\",\")) {\n          // multiple week spans\n          var weeksSplit = cur.weeks.split(\",\")\n          for (let z = 0; z < weeksSplit.length; z++) {\n            weeksForEvent = weeksForEvent.concat(parseWeeks(weeksSplit[z]))\n          }\n\n        }\n        else if (cur.weeks.includes(\",\")) {\n          // multiple weeks\n          let weeksSplit = cur.weeks.split(\",\")\n          for (let z = 0; z < weeksSplit.length; z++) {\n            weeksForEvent = weeksForEvent.concat(parseWeeks(weeksSplit[z]))\n          }\n        } else if (cur.weeks.includes(\"-\")) {\n          //week span\n\n          weeksForEvent = weeksForEvent.concat(parseWeeks(cur.weeks))\n        } else {\n          weeksForEvent = weeksForEvent.concat(parseWeeks(cur.weeks))\n          //single week\n        }\n        for (let i = 0; i < weeksForEvent.length; i++) {\n          let curDate\n          if (weeksForEvent[i] >= 12) {\n            weeksForEvent[i] = weeksForEvent[i] - 12\n            curDate = addDays(week12, ((weeksForEvent[i]) * 7))\n          } else {\n            curDate = addDays(week1, ((weeksForEvent[i] - 1) * 7))\n          }\n          curDate = addDays(curDate, dayAdd)\n          var startHours = parseTime(cur.start)\n          var start = addMinutes(curDate, startHours[0] * 60)\n          start = addMinutes(start, startHours[1])\n          var endHours = parseTime(cur.end)\n          var end = addMinutes(curDate, endHours[0] * 60)\n          end = addMinutes(end, endHours[1])\n          var event = {\n            title: cur.type + \" | \" + moduleName + \" | \" + cur.activity.split(\" \")[0],\n            type: cur.type,\n            start: start,\n            end: end,\n            allDay: false,\n            moduleName: moduleName,\n            modcode: modcode,\n            room: cur.room,\n            activity: cur.activity,\n            staff: cur.staff,\n            duration: cur.duration,\n          };\n          events.push(event)\n        }\n\n      }\n    }\n    console.log(events)\n    return events\n  }\n  getModuleInfo(url) {\n    var cors = \"https://cors-anywhere.herokuapp.com/\"\n    cors = \"https://mysterious-everglades-22580.herokuapp.com/\"\n    cors = \"https://cors-spooky.herokuapp.com/\"\n    cors = \"https://secret-chamber-30285.herokuapp.com/\"\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", cors + url, false); // false for synchronous request\n    xmlHttp.send();\n    //console.log(xmlHttp.responseText)\n    var raw = xmlHttp.responseText.split(\"<title>\")[1].split(\"module\")[0].trim()\n    return raw\n  }\n  getTimetable(matric) {\n    if (matric === \"\" || matric === undefined || matric === null) {\n      return\n    }\n    var hostname = 'https://timetable.dundee.ac.uk'\n    var port = '8084'\n    var path = '/reporting/textspreadsheet?objectclass=student+set&idtype=id&identifier='\n    var path2 = \"/1&t=SWSCUST+student+set+textspreadsheet&days=1-7&weeks=1-52&periods=1-28&template=SWSCUST+student+set+textspreadsheet\"\n    var cors = \"https://cors-anywhere.herokuapp.com/\"\n    cors = \"https://mysterious-everglades-22580.herokuapp.com/\"\n    cors = \"https://cors-spooky.herokuapp.com/\"\n    cors = \"https://secret-chamber-30285.herokuapp.com/\"\n    var fullURL = hostname + ':' + port + path + matric + path2\n    var xmlHttp = new XMLHttpRequest();\n    xmlHttp.open(\"GET\", cors + fullURL, false); // false for synchronous request\n    xmlHttp.send();\n    var raw = xmlHttp.responseText\n    raw = raw.split(`<p><span class='labelone'>Monday</span></p>`)[1]\n    if (raw === undefined) {\n      return\n    }\n    raw = raw.split(`<p><span class='labelone'>Saturday</span></p>`)[0]\n    //console.log(raw)\n    var days = raw.split('</span></p>')\n    var daysJSON = []\n    for (let x = 0; x < days.length; x++) {\n      if (days[x].includes(`<p><span class='labelone'`)) {\n        days[x] = days[x].split('</table>')[0]\n      }\n      var parser = new DOMParser();\n      var doc = parser.parseFromString(days[x], 'text/html');\n      daysJSON.push(this.tableToJson(doc.body.firstChild))\n\n    }\n    console.log(daysJSON)\n    let temp = this.parseTimetable(daysJSON)\n    this.setState({ \"calendar\": temp })\n\n  }\n  componentDidMount() {\n    console.log(window.location.search)\n    this.getTimetable(window.location.search.split(\"=\")[1])\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}